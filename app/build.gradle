apply plugin: 'com.android.application'

task deps(type: Exec){
        commandLine 'bash', '../libuv/libuv-1.23.1/BASHCOMPILE.sh'
}

task copy(type: Exec, dependsOn: 'deps'){
        commandLine 'bash', '../libuv/libuv-1.23.1/COPY.sh'
}

task copyXMR(type: Exec, dependsOn: 'externalNativeBuild'){
	commandLine 'bash', 'src/main/cpp/xmrig-2.8.0-rc/COPY.sh'
}

project.tasks.getByName('preBuild').dependsOn deps

android {
    compileSdkVersion 26
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "arm64-v8a", "armeabi-v7a", "x86", "x86_64"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
    defaultConfig {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        applicationId "androidminer.elijaxapps.com.androidminer"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 4
        versionName '1.01'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DUV_INCLUDE_DIR=src/main/cpp/xmrig-2.8.0-rc/include"
		cppFlags "-std=gnu++11"
		// -std=c++11 or -std=gnu++11
		
            }
        }
        multiDexEnabled true //important
    }
    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
        }
    }
    buildToolsVersion '28.0.2'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/xmrig-2.8.0-rc/CMakeLists.txt')
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.google.android.gms:play-services-ads:17.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}
